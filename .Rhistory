datasets
datasets()
data()
cars()
cars
devtools::install()
devtools::document()
?rScaledInvChi2
draws = rScaledInvChi2(n = 10000, v = 5, tau2 = 10)
mean(draws)
?BayesLinReg
devtools::document()
?BayesLinReg
devtools::document()
?BayesLinReg
devtools::document()
?BayesLinReg
devtools::document()
?BayesLinReg
devtools::install()
library(bayeslearn)
cars
X = cbind(1,cars$speed)
y = cars$speed
mu_0 = c(0,0)
Omega_0 = 0.1*diag(2)
Omega_0
v_0 = 5
sigma2_0
lm(dist ~ speed, data = cars)
res = lm(dist ~ speed, data = cars)
summary(res)
sigma2_0 = 10
postRes = BayesLinReg(y, X, mu_0, Omega_0, v_0, sigma2_0, nIter)
nIter =
1000
postRes = BayesLinReg(y, X, mu_0, Omega_0, v_0, sigma2_0, nIter)
devtools::install()
library(bayeslearn)
postRes = BayesLinReg(y, X, mu_0, Omega_0, v_0, sigma2_0, nIter)
library(mvtnorm)
devtools::install()
library(bayeslearn)
postRes = BayesLinReg(y, X, mu_0, Omega_0, v_0, sigma2_0, nIter)
mu_0 = c(0,0); Omega_0 = 0.1*diag(2)
postRes = BayesLinReg(y, X, mu_0, Omega_0, v_0, sigma2_0, nIter)
hist(postRes$sigma2Sample, main = "Posterior noise variance")
hist(postRes$betaSample[,1], main = "Posterior intercept")
hist(postRes$betaSample[,1], nbins = 30, main = "Posterior intercept")
hist(postRes$betaSample[,1], bins = 30, main = "Posterior intercept")
?bins
?hist
hist(postRes$betaSample[,1], breaks = 30, main = "Posterior intercept")
hist(postRes$sigma2Sample, breaks = 30, main = "Posterior noise variance")
hist(postRes$betaSample[,2], breaks = 30, main = "Posterior slope")
hist(postRes$betaSample[,2], breaks = 30, main = paste("Posterior",expression(beta_1))
)
hist(postRes$betaSample[,2], breaks = 30, main = paste("Posterior",expression(beta_1)))
hist(postRes$betaSample[,2], breaks = 30, main = paste("Posterior", expression(beta)))
hist(postRes$betaSample[,2], breaks = 30, main = paste("Posterior", expression(\beta)))
hist(postRes$betaSample[,2], breaks = 30, main = expression(paste("Posterior",beta_1))
)
hist(postRes$betaSample[,2], breaks = 30, main = expression(paste("Posterior", beta_1)))
hist(postRes$betaSample[,2], breaks = 30, main = expression(paste("Posterior", beta)))
hist(postRes$betaSample[,2], breaks = 30, main = expression(paste("Posterior ", beta[1])))
hist(postRes$sigma2Sample, breaks = 30, main = expression(paste("Posterior ", sigma^2)))
hist(postRes$sigma2Sample, breaks = 30, main = expression(paste("Posterior ", sigma^2)), xlab = "")
hist(postRes$sigma2Sample, breaks = 30, main = expression(paste("Posterior ", sigma^2)), xlab = "")
hist(postRes$betaSample[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
hist(postRes$betaSample[,2], breaks = 30, main = expression(paste("Posterior ", beta[1])), xlab = "")
devtools::install()
devtools::document()
devtools::install()
devtools::document()
library(bayeslearn)
draws = rDirichlet(n = 1000, alpha = c(3,5,10))
devtools::build()
devtools::install()
remove.packages("bayeslearn")
devtools::install()
remove.packages("bayeslearn")
devtools::install()
devtools::install(force = TRUE)
devtools::document()
devtools::install(force = TRUE)
devtools::install()
library(bayeslearn)
devtools::document()
?rDirichlet
rDirichlet(n = 1000, alpha = c(3,5,10))
rDirichlet(n = 1000)
devtools::install()
devtools::document()
library(bayeslearn)
rDirichlet(n = 1000, alpha = c(3,5,10))
?rDirichlert
?rDirichlet
devtools::install()
devtools::document()
?rDirichlet
rDirichlet(n = 1000, alpha = c(3,5,10))
colMeans(draws)
draws = rDirichlet(n = 1000, alpha = c(3,5,10))
colMeans(draws)
c(3,5,10)/18
devtools::install()
?rDirichlet
devtools::document()
?rDirichlet
titanic
data()
Titantic
Titanic
?Titanic
Titanic[,,,1]
Titanic[,,1,1]
Titanic[,1,1,1]
esoph
stack.loss
usethis::use_package("jvamisc")
usethis::use_package("SUdatasets")
devtools::install()
devtools::document()
devtools::install()
devtools::document()
?bike
?Titanic
?titanic
y = titanic$survived
Titanic
SUdatasets::titanic$survived
SUdatasets::titanic
SUdatasets::titanicX = cbind(1, SUdatasets::titanic$age, SUdatasets::titanic$sex, SUdatasets::titanic$firstclass)
X = cbind(1, SUdatasets::titanic$age, SUdatasets::titanic$sex, SUdatasets::titanic$firstclass)
X
as.numeric(X)
SUdatasets::titanic$age
SUdatasets::titanic$sex
SX = cbind(1, SUdatasets::titanic$age)Udatasets::titanic$sex
X = cbind(1, SUdatasets::titanic$age)
X
y = SUdatasets::titanic$survived
y
logPostLogisticReg(c(0,1), y, X, tau = 10)
devtools::install()
.Last.error.trace
devtools::install()
devtools::document()
devtools::document()
?logPostLogisticReg
library(bayeslearn)
y = SUdatasets::titanic$survived
X = cbind(1, SUdatasets::titanic$age)
logPostLogisticReg(c(0,1), y, X, tau = 10)
devtools::install()
devtools::document()
logPostLogisticReg(c(0,1), y, X, tau = 10)
logPostLogisticReg(c(0,0.1), y, X, tau = 10)
X
initVal = as.vector(solve(crossprod(X,X))%*%t(X)%*%y) # OLS as initial values
initVal
nPara = dim(X)[2]
optRes = optim(initVal, logPostLogisticReg, gr=NULL, y, X, tau, method=c("BFGS"),
control=list(fnscale=-1), hessian=TRUE)
tau = 10
initVal = as.vector(solve(crossprod(X,X))%*%t(X)%*%y) # OLS as initial values
nPara = dim(X)[2]
optRes = optim(initVal, logPostLogisticReg, gr=NULL, y, X, tau, method=c("BFGS"),
control=list(fnscale=-1), hessian=TRUE)
?dmvnorm
rmvnorm(n = 100, mean = postMode, sigma = postCov)
rmvnorm
library(mvtnorm)
rmvnorm(n = 100, mean = postMode, sigma = postCov)
postMode =  optRes$par
postCov = -solve(optRes$hessian) # Approx posterior covariance matrix
rmvnorm(n = 100, mean = postMode, sigma = postCov)
hist(betaPostDraws[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
betaPostDraws
betaPostDraws = rmvnorm(n = 100, mean = postMode, sigma = postCov)
hist(betaPostDraws[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
hist(betaPostDraws[,2], breaks = 30, main = expression(paste("Posterior ", beta[1])), xlab = "")
betaPostDraws = rmvnorm(n = 1000, mean = postMode, sigma = postCov)
hist(betaPostDraws[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
hist(betaPostDraws[,2], breaks = 30, main = expression(paste("Posterior ", beta[1])), xlab = "")
hist(betaPostDraws[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
betaPostDraws = rmvnorm(n = 5000, mean = postMode, sigma = postCov)
hist(betaPostDraws[,1], breaks = 30, main = expression(paste("Posterior ", beta[0])), xlab = "")
hist(betaPostDraws[,2], breaks = 30, main = expression(paste("Posterior ", beta[1])), xlab = "")
initVal
?logPostLogisticRg
?logPostLogisticReg
diag(2)
devtools::install()
devtools::document()
